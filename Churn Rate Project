 -- create months temporary table
 
 WITH months AS
 (SELECT
    '2017-01-01' AS first_day,
    '2017-01-31' AS last_day
  UNION
  SELECT
    '2017-02-01' AS first_day,
    '2017-02-28' AS last_day
  UNION
  SELECT
    '2017-03-01' AS first_day,
    '2017-03-31' AS last_day
 ),

-- joins months temporary table with subscriptions data base

 cross_join AS
 (SELECT *
 FROM subscriptions
 CROSS JOIN months),

-- checks to see the tables were joined, turned off after

/*SELECT *
 FROM cross_join;*/
 
 -- creates status temporary table month by month per each of the two segments in AB test

 status AS
 (SELECT id,
    first_day AS month,
    /*segment,
    subscription_start,
    subscription_end,*/
  CASE
    WHEN(subscription_start < first_day
      AND(subscription_end > first_day 
      OR subscription_end IS NULL)
        AND segment LIKE '87'
    ) THEN 1
    ELSE 0
  END AS is_active_87,
  CASE
    WHEN(subscription_start < first_day
      AND(subscription_end > first_day 
      OR subscription_end IS NULL)
      AND segment LIKE '30'
    ) THEN 1
    ELSE 0
  END AS is_active_30,
  CASE
    WHEN((subscription_end
    BETWEEN first_day AND last_day) 
    AND segment LIKE '87')
    THEN 1
    ELSE 0
  END AS is_canceled_87,
  CASE
    WHEN((subscription_end
    BETWEEN first_day AND last_day) 
    AND segment LIKE '30')
    THEN 1
    ELSE 0
  END AS is_canceled_30
  FROM cross_join
 ),
 
 --calculates churn rate per month

 status_aggregate AS
 (SELECT SUM(is_active_87) AS sum_active_87,
  SUM(is_active_30) AS sum_active_30,
  SUM(is_canceled_87) AS sum_canceled_87,
  SUM(is_canceled_30) AS sum_canceled_30
 FROM status
 GROUP BY month
 )

 /*SELECT
 FROM status_aggregate;*/


 SELECT 1.0 * sum_canceled_87/sum_active_87
      AS churn_rate_87,
  1.0 * sum_canceled_30/sum_active_30
    AS churn_rate_30
FROM status_aggregate;
