 -- returns top 5 articles
 SELECT title, score
 FROM hacker_news
 ORDER BY score DESC
 LIMIT 5;
 
 -- returns total score for all articles
 SELECT SUM(score)
 FROM hacker_news;
 
 -- returns users with scores of 200 or more and their cumulative score
 SELECT user,
 SUM(score) AS 'score'
 FROM hacker_news
 GROUP BY user
 HAVING score > 200
 ORDER BY score DESC;
 
 -- calculates percentage of 'market share' top user have ~ 22% for this case
 SELECT (517 + 309 + 304 + 282) / 6366.0;
 
 -- returns user who have been tricking readers into clicking to an unrelated video #banned
 SELECT user, 
 COUNT(*)
 FROM hacker_news
 WHERE url LIKE 'https://www.youtube.com/watch?v=dQw4w9WgXcQ'
 GROUP BY 1
 ORDER BY 2 DESC;
 
 -- returns websites that feed our news publishing site the most. In this case we are particularly interested in GitHub, Medium, and New York times
 SELECT CASE
   WHEN url LIKE '%github.com%' THEN 'GitHub'
   WHEN url LIKE '%medium.com%' THEN 'Medium'
   WHEN url LIKE '%nytimes.com%' THEN 'New York Times'
   ELSE 'Other'
   END AS 'Source',
  COUNT(*) 
 FROM hacker_news
 GROUP BY 1
 ORDER BY 2 DESC;
 
 -- returns timestamp format to analyze
 SELECT timestamp
 FROM hacker_news
 LIMIT 10;
 
 -- same as above
 SELECT timestamp,
   strftime('%H', timestamp)
 FROM hacker_news
 GROUP BY 1
 LIMIT 20;
 
 -- returns best time to publish article deduced from highest average score per time published
 SELECT strftime ('%H', timestamp) AS 'Hour',
   ROUND(AVG(score), 2) AS 'Average Score',
   COUNT(*) AS 'Number of Stories'
  FROM hacker_news
  WHERE timestamp IS NOT NULL
  GROUP BY 1
  ORDER BY 1 DESC;
